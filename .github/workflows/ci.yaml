name: Create release

on:
  push:
    branches:
      - master
    paths-ignore:
      - README.md
      - LICENSE
      - .husky/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm

      - name: Get new version
        run: |
          # 尝试从 package.json 中获取版本号
          VERSION=v$(node -p "require('./package.json').version" 2>/dev/null || echo "0.0.1")
          FILE_PREFIX=${{ github.event.repository.name }}-$VERSION
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "FILE_PREFIX=${FILE_PREFIX}" >> $GITHUB_ENV

      - name: Build ${{ matrix.app }}
        run: |
          # echo "YOUR_ENV=${{ vars.YOUR_ENV }}" >> .env
          pnpm install --frozen-lockfile --ignore-scripts
          pnpm run build
          cd build
          tar cvzf ${{ env.FILE_PREFIX }}.tar.gz client
          zip -r ${{ env.FILE_PREFIX }}.zip client
          cp ${{ env.FILE_PREFIX }}.tar.gz ../
          cp ${{ env.FILE_PREFIX }}.zip ../
          cd ..

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            ./${{ env.FILE_PREFIX }}.tar.gz
            ./${{ env.FILE_PREFIX }}.zip

      - run: pnpm dlx changelogithub
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
